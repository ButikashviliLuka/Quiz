{"version":3,"sources":["Context/CorrectAnswersContext.tsx","components/Correct.tsx","components/AnswerLog.tsx","Context/loadingcontexts/CategoryIdLoadingContext.tsx","Context/CategoryIdContext.tsx","Context/CurrentIdContex.tsx","components/Category.tsx","Context/ShowAnswersContext.tsx","utils/handleHTMLDecode.ts","utils/shuffleArray.ts","components/Input.tsx","components/Question.tsx","components/Select.tsx","Context/loadingcontexts/TokenLoadingContext.tsx","Context/TokenContext.tsx","Context/loadingcontexts/DataLoadingContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CorrectAnswersContext","createContext","CorrectAnswersProvider","children","useState","grade","setGrade","Provider","value","Correct","useContext","useEffect","AnswerLog","state","index","arr","CategoryIdLoadingContext","CategoryIdLoadingProvider","categoryIdLoading","setCategoryIdLoading","CategoryIdContext","CategoryIdProvider","name","id","categoryId","setCategoryId","a","axios","get","response","data","trivia_categories","fetchData","CurrentCategoryIdContext","CurrentCategoryIdProvider","setId","Category","onChange","e","target","map","category","ShowAnswersContext","ShowAnswersProvider","showAnswers","setShowAnswers","handleHTMLDecode","input","DOMParser","parseFromString","documentElement","textContent","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Input","handleChange","shuffledChoices","setShuffledChoices","correct_answer","incorrect_answers","item","className","type","checked","disabled","Question","question","setState","Select","props","difficulty","setDifficulty","TokenLoadingContext","TokenLoadingProvider","tokenLoading","setTokenLoading","TokenContext","TokenProvider","token","setToken","console","log","DataLoadingContext","DataLoadingProvider","dataLoading","setDataLoading","App","setData","1","2","3","4","5","6","7","8","9","setArr","results","newArr","i","push","onClick","onSubmit","preventDefault","handleSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27197815.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport {ContextProviderInterface} from \"./CategoryIdContext\";\r\n\r\n\r\nexport const CorrectAnswersContext = createContext([] as any);\r\n\r\n\r\n\r\nexport const CorrectAnswersProvider = ({children} : ContextProviderInterface) => {\r\n  const [grade, setGrade] = useState<number>(0);\r\n  return (\r\n    <CorrectAnswersContext.Provider value={[grade, setGrade]}>\r\n      {children}\r\n    </CorrectAnswersContext.Provider>\r\n  );\r\n};","import React, { useContext, useEffect } from \"react\";\r\nimport { CorrectAnswersContext } from \"../Context/CorrectAnswersContext\";\r\n\r\nconst Correct = () => {\r\n  const [grade, setGrade] = useContext(CorrectAnswersContext);\r\n  useEffect(() => {\r\n    setGrade((grade: any) => grade + 1);\r\n  }, []);\r\n  return <h1>Correct</h1>;\r\n};\r\n\r\nexport default Correct;","import React, { useContext } from \"react\";\r\nimport Correct from \"./Correct\";\r\nimport {State} from \"../App\"\r\n\r\ninterface Props {\r\n  state: State,\r\n  index: number,\r\n  arr: Array<string>\r\n}\r\n\r\nconst AnswerLog = ({ state, index, arr } : Props) => {\r\n  return (\r\n    <div>{state[index] === arr[index] ? <Correct /> : <h3>Incorrect</h3>}</div>\r\n  );\r\n};\r\n\r\nexport default AnswerLog;","import React, { createContext, useState } from \"react\";\r\nimport { ContextProviderInterface } from \"../CategoryIdContext\";\r\n\r\nexport const CategoryIdLoadingContext = createContext([] as any);\r\n\r\nexport const CategoryIdLoadingProvider = ({children}: ContextProviderInterface ) => {\r\n    const [categoryIdLoading, setCategoryIdLoading] = useState(true);\r\n    return (\r\n        <CategoryIdLoadingContext.Provider value={[categoryIdLoading, setCategoryIdLoading]}>\r\n            {children}\r\n        </CategoryIdLoadingContext.Provider>\r\n    )\r\n}","import React, { createContext, ReactNode, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CategoryIdLoadingContext } from \"./loadingcontexts/CategoryIdLoadingContext\";\r\n\r\ninterface CategoryIdInterface {\r\n  id: number, \r\n  name: string\r\n}\r\n\r\nexport const CategoryIdContext = createContext([] as Array<any>);\r\n\r\nexport interface ContextProviderInterface {\r\n  children: ReactNode\r\n}\r\n\r\nexport const CategoryIdProvider = ({children}: ContextProviderInterface) => {\r\n  const [categoryId, setCategoryId] = useState([{name: \"General Knowledge\", id: 9}] as any);\r\n  const [categoryIdLoading, setCategoryIdLoading] = useContext(CategoryIdLoadingContext);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(\"https://opentdb.com/api_category.php\");\r\n      setCategoryId([...response.data.trivia_categories]);\r\n      setCategoryIdLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <CategoryIdContext.Provider value={[categoryId, setCategoryId]}>\r\n      {children}\r\n    </CategoryIdContext.Provider>\r\n  );\r\n};","import React, { createContext, useState } from \"react\";\r\nimport {ContextProviderInterface} from \"./CategoryIdContext\"\r\n\r\n\r\nexport const CurrentCategoryIdContext = createContext([] as any);\r\n\r\nexport const CurrentCategoryIdProvider = ({children} : ContextProviderInterface) => {\r\n  const [id, setId] = useState<number>(11);\r\n  return (\r\n    <CurrentCategoryIdContext.Provider value={[id, setId]}>\r\n      {children}\r\n    </CurrentCategoryIdContext.Provider>\r\n  );\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CategoryIdContext } from \"../Context/CategoryIdContext\";\r\nimport { CurrentCategoryIdContext } from \"../Context/CurrentIdContex\";\r\n\r\nconst Category = () => {\r\n  const [categoryId, setCategoryId] = useContext(CategoryIdContext);\r\n  const [id, setId] = useContext(CurrentCategoryIdContext);\r\n  return (\r\n    <div>\r\n      <select value={categoryId.id} onChange={(e) => setId(e.target.value)}>\r\n        {categoryId ? (\r\n          categoryId.map((category: any) => <option value={category.id} key={category.id}>{category.name}</option>)\r\n        ) : (\r\n          <option></option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;","import React, { createContext, useState } from \"react\";\r\nimport {ContextProviderInterface} from \"./CategoryIdContext\";\r\n\r\nexport const ShowAnswersContext = createContext([] as any);\r\n\r\nexport const ShowAnswersProvider = ({children} : ContextProviderInterface) => {\r\n    const [showAnswers, setShowAnswers] = useState<boolean>(false)\r\n    return (\r\n        <ShowAnswersContext.Provider value={[showAnswers, setShowAnswers]}>\r\n            {children}\r\n        </ShowAnswersContext.Provider>\r\n    )\r\n}","function handleHTMLDecode(input: string): any {\r\n  let parser = new DOMParser().parseFromString(input, \"text/html\");\r\n  return parser.documentElement.textContent;\r\n}\r\n\r\nexport default handleHTMLDecode;\r\n","function shuffle(array: any):any {\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  }\r\n  \r\n  export default shuffle;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {ShowAnswersContext} from \"../Context/ShowAnswersContext\"\r\nimport handleHTMLDecode from \"../utils/handleHTMLDecode\"\r\nimport shuffle from \"../utils/shuffleArray\";\r\n\r\ninterface Props {\r\n  data: any,\r\n  handleChange: any,\r\n  index: any,\r\n  state: any\r\n}\r\n\r\nconst Input = ({ data, handleChange, index, state } : Props) => {\r\n  const [shuffledChoices, setShuffledChoices] = useState([]);\r\n  const [showAnswers, setShowAnswers] = useContext(ShowAnswersContext);\r\n  let arr = [data.correct_answer, ...data.incorrect_answers];\r\n  useEffect(() => {\r\n    setShuffledChoices(shuffle(arr));\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      {shuffledChoices\r\n        ? shuffledChoices.map((item) => (\r\n            <div className=\"radio-border\" key={item}>\r\n              <label className=\"containter-input\">\r\n                {handleHTMLDecode(item)}\r\n                <input\r\n                  type=\"radio\"\r\n                  name={index}\r\n                  value={handleHTMLDecode(item)}\r\n                  onChange={handleChange}\r\n                  checked={state[index] === handleHTMLDecode(item)}\r\n                  disabled={showAnswers}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n              <br />\r\n            </div>\r\n          ))\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport handleHTMLDecode from \"../utils/handleHTMLDecode\"\r\n\r\ninterface Props {\r\n  question: any,\r\n  index: any,\r\n  state: any,\r\n  setState: any,\r\n};\r\n\r\nconst Question = ({ question, index, state, setState }: Props) => {\r\n  const handleChange = (e: any) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>{handleHTMLDecode(question.question)}</h3>\r\n      <Input handleChange={handleChange} data={question} index={index} state={state} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;","import React from \"react\";\r\n\r\nconst Select = (props: any) => {\r\n  return (\r\n    <div>\r\n      <select\r\n        value={props.difficulty}\r\n        onChange={(e) => props.setDifficulty(e.target.value)}\r\n      >\r\n        <option value={\"easy\"}>Easy</option>\r\n        <option value={\"medium\"}>Medium</option>\r\n        <option value={\"hard\"}>Hard</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;","import React, { createContext, useState } from \"react\";\r\nimport { ContextProviderInterface } from \"../CategoryIdContext\";\r\n\r\nexport const TokenLoadingContext = createContext([] as any);\r\n\r\nexport const TokenLoadingProvider = ({children}: ContextProviderInterface ) => {\r\n    const [tokenLoading, setTokenLoading] = useState(true);\r\n    return (\r\n        <TokenLoadingContext.Provider value={[tokenLoading, setTokenLoading]}>\r\n            {children}\r\n        </TokenLoadingContext.Provider>\r\n    )\r\n}","import axios from \"axios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { ContextProviderInterface } from \"./CategoryIdContext\";\r\nimport { TokenLoadingContext } from \"./loadingcontexts/TokenLoadingContext\";\r\n\r\nexport const TokenContext = createContext([] as any);\r\n\r\nexport const TokenProvider = ({ children }: ContextProviderInterface) => {\r\n  const [tokenLoading, setTokenLoading] = useContext(TokenLoadingContext);\r\n  const [token, setToken] = useState<string>(\"\");\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await axios.get(\r\n          \"https://opentdb.com/api_token.php?command=request\"\r\n        );\r\n        setToken(data.data.token);\r\n        setTokenLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <TokenContext.Provider value={[token]}>{children}</TokenContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\nimport { ContextProviderInterface } from \"../CategoryIdContext\";\r\n\r\nexport const DataLoadingContext = createContext([] as any);\r\n\r\nexport const DataLoadingProvider = ({children}: ContextProviderInterface ) => {\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    return (\r\n        <DataLoadingContext.Provider value={[dataLoading, setDataLoading]}>\r\n            {children}\r\n        </DataLoadingContext.Provider>\r\n    )\r\n}","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AnswerLog from \"./components/AnswerLog\";\nimport Category from \"./components/Category\";\nimport Question from \"./components/Question\";\nimport \"./App.css\";\nimport Select from \"./components/Select\";\nimport { CorrectAnswersContext } from \"./Context/CorrectAnswersContext\";\nimport { CurrentCategoryIdContext } from \"./Context/CurrentIdContex\";\nimport { ShowAnswersContext } from \"./Context/ShowAnswersContext\";\nimport { TokenContext } from \"./Context/TokenContext\";\nimport { CategoryIdLoadingContext } from \"./Context/loadingcontexts/CategoryIdLoadingContext\";\nimport { DataLoadingContext } from \"./Context/loadingcontexts/DataLoadingContext\";\nimport { TokenLoadingContext } from \"./Context/loadingcontexts/TokenLoadingContext\";\n\ninterface Item {\n  question: String;\n}\n\nexport interface State {\n  [key: number]: string;\n}\n\ninterface Data {\n  category: string;\n  type: string;\n  difficulty: string;\n  question: string;\n  correct_answer: string;\n  incorrect_answers: Array<string>;\n}\n\nfunction App() {\n  const [categoryIdLoading, setCate] = useContext(CategoryIdLoadingContext);\n  const [dataLoading, setDataLoading] = useContext(DataLoadingContext);\n  const [tokenLoading] = useContext(TokenLoadingContext);\n  const [difficulty, setDifficulty] = useState<string>(\"easy\");\n  const [id] = useContext(CurrentCategoryIdContext);\n  const [grade] = useContext(CorrectAnswersContext);\n  const token = useContext(TokenContext);\n  const [data, setData] = useState<Array<Data>>([]);\n  const [showAnswers, setShowAnswers] = useContext(ShowAnswersContext);\n  const [state, setState] = useState({\n    1: \"\",\n    2: \"\",\n    3: \"\",\n    4: \"\",\n    5: \"\",\n    6: \"\",\n    7: \"\",\n    8: \"\",\n    9: \"\",\n  } as State);\n  const [arr, setArr] = useState([] as any);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\n        `https://opentdb.com/api.php?amount=10&category=${id}&difficulty=${difficulty}&token=${token}`\n      );\n      setData(response.data.results);\n      const newArr = [];\n      for (let i = 0; i < response.data.results.length; i++) {\n        newArr.push(response.data.results[i].correct_answer);\n      }\n      setArr([...newArr]);\n      setDataLoading(false);\n    };\n    if (categoryIdLoading || tokenLoading) {\n      return;\n    }\n    fetchData();\n  }, [difficulty, id, token]);\n\n  const handleSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    setShowAnswers(true);\n  };\n\n  const retryQuiz = (): void => {\n    setState({\n      1: \"\",\n      2: \"\",\n      3: \"\",\n      4: \"\",\n      5: \"\",\n      6: \"\",\n      7: \"\",\n      8: \"\",\n      9: \"\",\n    });\n    setShowAnswers(false);\n  };\n\n  return (\n    <div className=\"container\">\n      {dataLoading || categoryIdLoading || tokenLoading ? (\n        <h1>Loading</h1>\n      ) : (\n        <>\n          <div className=\"test-types\">\n            <Category />\n            <Select difficulty={difficulty} setDifficulty={setDifficulty} />\n          </div>\n          <button className=\"retry-btn\" onClick={retryQuiz}>\n            Try Again\n          </button>\n          <form\n            onSubmit={(e) => handleSubmit(e)}\n            className=\"question-container\"\n          >\n            {data\n              ? data.map((item: Item, index) => (\n                  <div className=\"question-box\" key={index}>\n                    <Question\n                      question={item}\n                      key={index}\n                      index={index}\n                      state={state}\n                      setState={setState}\n                    />\n                    {showAnswers ? (\n                      <AnswerLog state={state} index={index} arr={arr} />\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                ))\n              : \"\"}\n            <input type=\"submit\" value={\"SUBMIT\"} />\n            {showAnswers ? (\n              <h3 className=\"grade-heading\">Your Grade: {grade}</h3>\n            ) : (\n              \"\"\n            )}\n          </form>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CategoryIdProvider } from \"./Context/CategoryIdContext\";\nimport { CorrectAnswersProvider } from \"./Context/CorrectAnswersContext\";\nimport { CurrentCategoryIdProvider } from \"./Context/CurrentIdContex\";\nimport { ShowAnswersProvider } from \"./Context/ShowAnswersContext\";\nimport { TokenContext, TokenProvider } from \"./Context/TokenContext\";\nimport {\n  DataLoadingContext,\n  DataLoadingProvider,\n} from \"./Context/loadingcontexts/DataLoadingContext\";\nimport { CategoryIdLoadingProvider } from \"./Context/loadingcontexts/CategoryIdLoadingContext\";\nimport { TokenLoadingProvider } from \"./Context/loadingcontexts/TokenLoadingContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLoadingProvider>\n      <CategoryIdLoadingProvider>\n        <TokenLoadingProvider>\n          <TokenProvider>\n            <CategoryIdProvider>\n              <ShowAnswersProvider>\n                <CorrectAnswersProvider>\n                  <CurrentCategoryIdProvider>\n                    <App />\n                  </CurrentCategoryIdProvider>\n                </CorrectAnswersProvider>\n              </ShowAnswersProvider>\n            </CategoryIdProvider>\n          </TokenProvider>\n        </TokenLoadingProvider>\n      </CategoryIdLoadingProvider>\n    </DataLoadingProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}